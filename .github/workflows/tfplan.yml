name: Terraform Plan on PR

on:
  pull_request:
    branches:
      - master  # Trigger on PRs targeting the master branch

permissions:
  id-token: write  # Enables OIDC authentication
  contents: read

jobs:
  terraform-plan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Log in to Azure using Federated Credentials
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.0  

      - name: Create backend.tf (Temporary Backend Configuration)
        run: |
          cat <<EOF > backend.tf
          terraform {
            backend "azurerm" {}
          }
          EOF

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="storage_account_name=${{ secrets.AZURE_STORAGE_ACCOUNT }}" \
            -backend-config="container_name=${{ secrets.AZURE_STORAGE_CONTAINER }}" \
            -backend-config="key=terraform.tfstate" \
            -backend-config="access_key=${{ secrets.AZURE_STORAGE_ACCESS_KEY }}"

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan

      - name: Comment Plan Output on PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const planOutput = fs.readFileSync('terraform.plan', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `### Terraform Plan Output ðŸ“œ\n\`\`\`hcl\n${planOutput}\n\`\`\``
            });
